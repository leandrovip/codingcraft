@using CodingCraftEx04.Domain.Models.Enum
@model CodingCraftEx04.MVC.ViewModels.EditUserViewModel

@{
    ViewBag.Title = "Editar";
}

<h2>Edição de Usuário</h2>
<hr />
<br />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Grupos", new { @class = "control-label col-md-2" })
            <span class=" col-md-10">
                @foreach (var item in Model.RolesList)
                {
                    <input type="checkbox" name="SelectedRole" value="@item.Value" checked="@item.Selected" class="checkbox-inline" />
                    @Html.Label(item.Value, new { @class = "control-label" })
                }
            </span>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Permissões do Usuário</label>
            <div class="col-md-10">
                @foreach (var permissao in Enum.GetValues(typeof (PermissaoEnum)))
                {
                    <input type="checkbox" name="SelectedPermissoes" value="@permissao" checked="@Model.Permissoes.Contains(permissao.ToString())" class="checkbox-inline"/>
                    @Html.Label(@permissao.ToString(), new {@class = "control-label"})
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
